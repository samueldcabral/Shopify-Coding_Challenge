{"version":3,"sources":["components/Navbar.js","components/Spinner.js","components/SearchResult.js","components/Search.js","App.js","index.js"],"names":["Navbar","react_default","a","createElement","className","Spinner","src","alt","SearchResult","state","favs","starred","getLink","link","actualLink","split","word","convertLink","text","max","index","i","length","charCodeAt","push","first","second","htmlToElements","html","template","document","innerHTML","content","childNodes","htmlToElement","sanitizeTxt","txt","splitText","count","replace","join","trim","getBoldWords","str","htmlTotal","boldWords","includes","temp","tempFinal","nodes","_this","href","textContent","console","log","domParser","parsedStr","DOMParser","parseFromString","parsedContent","documentElement","parsedContentText","sanitizedTxt","Object","toConsumableArray","filter","x","map","_favoriteItem","starItem","concat","setState","_unfavoriteItem","_this2","this","_this$props","props","itemList","loading","title","keys","key","aria-hidden","id","onClick","body","Favs","components_Spinner","Component","Search","keyword","url","items","_handleSubmit","event","preventDefault","__handleChange","target","value","setTimeout","_handleKeyDown","keyCode","_performApiCall","regex","RegExp","axios","get","then","res","data","exec","keywords","onSubmit","type","onChange","onKeyDown","SearchResult_SearchResult","App","components_Navbar","Search_Search","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.fd9e2bda.chunk.js","sourcesContent":["import React from 'react'\n\nconst Navbar = () => {\n  return (\n    <div className=\"navbar\">\n      <h1 className=\"navbar__h1\">Toronto Waste Lookup</h1>\n    </div>\n  )\n}\n\nexport default Navbar\n","import React from 'react'\n\nconst Spinner = () => {\n  return (\n    <div className=\"spinner\">\n      <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\" alt=\"Loading... Please Wait...\"/>\n    </div>\n  )\n}\n\nexport default Spinner\n","import React, { Component } from 'react'\nimport Spinner from './Spinner'\n\nexport default class SearchResult extends Component {\n  state = {\n    favs: [],\n    starred: []\n  }\n\n  getLink = (link) => {\n  //This is to extract the link and the name \n    let actualLink = link.split(\"<a href=\")[1]\n    actualLink = actualLink.split(`\"`)[1]\n    let word = link.split(`\">`)[1]\n    word = word.split(\"</\")[0]\n  \n    return {\"link\": actualLink, \"word\":word}    \n  }\n\n  convertLink = (text) => {\n    // Char < Ascii Code 60\n    // Char > Ascii Code 62\n    // Char 'a' Ascii Code 97\n\n    let max = text.split('')\n    let index = []\n\n    //For loop to get the indexes of the start and end of the <a> tags\n    for(let i = 0; i < max.length; i++){\n      if(max[i].charCodeAt(0) === 60 && max[i+1].charCodeAt(0) === 97){\n        index.push({\"first\": i})\n      }else if(max[i].charCodeAt(0) === 62 && max[i-1].charCodeAt(0) === 97){\n        index.push({\"second\": i})\n      }\n    }\n    return index\n  } \n  \n  htmlToElements = (html) => {\n    //Can convert a string to html\n    let template = document.createElement('template');\n    template.innerHTML = html;\n\n    //returns NodeList\n    return template.content.childNodes;\n  }\n\n  htmlToElement = (html) => {\n    //Can convert a string to html\n    let template = document.createElement('template');\n    template.innerHTML = html;\n\n    //returns element\n    return template.content;\n}\n\n  sanitizeTxt = (txt) => {\n    //A little helper function to clean the html entitiy\n    let splitText = txt.split('')\n    let count = 0;\n    \n    for(let i = 0; i < splitText.length; i++){\n      if(splitText[i].charCodeAt(0) === 38){\n        while(splitText[i].charCodeAt(0) !== 59){\n          if(count === 0){\n            splitText[i] = splitText[i].replace(splitText[i], ' ')   \n          }else{\n            splitText[i] = splitText[i].replace(splitText[i], '')\n          }\n          count++\n          i++\n        }\n        if(splitText[i].charCodeAt(0) === 59){\n          splitText[i] = splitText[i].replace(splitText[i], '')\n        }\n      }\n    }\n    splitText = splitText.join('').trim()\n    return splitText\n  }\n\n  getBoldWords = (str) => {\n    let htmlTotal = [];\n    let boldWords = [];\n\n    for(let i = 0; i < str.length; i++){\n      if(str[i].includes(\"<strong>\")){  \n        let temp = str[i].split('<strong>');\n\n        for(let i = 0; i < temp.length; i++){\n          if(temp[i].includes(\"</\")){\n            let tempFinal = temp[i].split('</strong>')\n            boldWords.push(tempFinal[0])\n          }\n        }\n      }else if(str[i].includes(\"<b>\")){  \n        let temp = str[i].split('<b>')\n        for(let i = 0; i < temp.length; i++){\n          if(temp[i].includes(\"</\")){\n            let tempFinal = temp[i].split('</b>')\n            boldWords.push(tempFinal[0])\n          }\n        }\n      }else if(str[i].includes(\"</a\")){\n        let tempFinal = this.htmlToElement(str[i])\n        let nodes = tempFinal.childNodes;\n        let temp = []\n\n        for(let i = 0; i < nodes.length; i++){\n          if(nodes[i].innerHTML){\n            temp.push(<a href={nodes[i].href}>{nodes[i].innerHTML}</a>)\n          }else{\n            temp.push(nodes[i].textContent)\n          }\n        }\n\n        htmlTotal.push(<p>{temp}</p>)\n      }\n    }\n    \n    for(let i = 0; i < str.length; i++){\n      if(str[i].includes(\"<strong>\")){\n        let temp = str[i].split(\"<strong>\");\n\n        htmlTotal.push(<li>{temp[0]}<strong>{boldWords[i]}</strong></li>);\n      }\n      else if(str[i].includes(\"<b>\")){\n        let temp = str[i].split(\"<b>\");\n\n        htmlTotal.push(<li>{temp[0]}<strong>{boldWords[i]}</strong></li>);\n      }\n      else if(str[i].includes(\"</a\")){\n        console.log(\"nothing to see here\")\n      }\n      else {\n        htmlTotal.push(<li>{str[i]}</li>)\n      }\n    }\n    return htmlTotal\n  }\n\n  domParser = (str) => {\n    //To get the string with html elems and covert, sanitize and prepare for rendering\n    let parsedStr = new DOMParser().parseFromString(str, \"text/html\");\n    let parsedContent = this.htmlToElements(parsedStr.documentElement.textContent)\n    let parsedContentText = this.htmlToElements(parsedContent[0].innerHTML)\n    parsedContentText = [...parsedContentText]\n    let prepTxt = parsedContentText.filter(x => x.innerHTML).map(x => x.innerHTML)\n    let sanitizedTxt = prepTxt.map(x => this.sanitizeTxt(x))\n    let element = this.getBoldWords(sanitizedTxt)\n\n    return element\n  }\n\n  _favoriteItem = (x, index) => {\n    //Since the props doesnt have a starred field, I created a little logic to check if said item has been starred\n    //If the result is true, it means that the Item is starred, so it needs to be unstarred\n    let result = this.state.starred.filter(x => {\n      return x.starItem.index === index && x.starItem.starred === true\n    })\n\n    if(result.length > 0){\n      //Case when the Item is already starred\n      const starItem = {\"index\": index, \"starred\": false}\n      let starred = this.state.starred.filter(x => {\n        return x.starItem.index !== index\n      })\n      starred = [...starred, {starItem}]\n      this.setState({starred})   \n      this._unfavoriteItem(x, index)\n     \n    }else{\n      //Case when the Item is not starred\n      const starItem = {\"index\": index, \"starred\": true}\n      const starred = [...this.state.starred, { starItem }]\n      const favs = [...this.state.favs, {x}]\n      this.setState({starred})\n      this.setState({favs})\n    }\n  }\n\n  _unfavoriteItem = (x, index) => { \n    //to remove an item from the starred list\n    const favs = this.state.favs.filter(x => {\n      return x.x.index !== index\n    })\n      const starItem = {\"index\": index, \"starred\": false}\n      let starred = this.state.starred.filter(x => {\n        return x.starItem.index !== index\n      })\n      starred = [...starred, {starItem}]\n      this.setState({starred})   \n      this.setState({favs})\n  }\n\n  render() {\n    const { itemList, loading } = this.props; \n    const title = Object.keys(itemList).length !== 0 ? itemList.map((x, index) => {\n      x[\"index\"] = index;\n      x[\"starred\"] = false;\n      let starred = this.state.starred.filter(x => {\n        return x.starItem.index === index && x.starItem.starred === true\n      })\n      \n      return (<div className=\"searchResult\" key={index}><span className=\"searchResult__title\">\n              <i className={starred.length > 0 ? \"fa fa-star searchResult__icon searchResult__icon--starred\" : \"fa fa-star searchResult__icon\"} \n                  aria-hidden=\"true\" \n                  id={index}\n                  onClick={() => {this._favoriteItem(x, index)}}>\n                  </i>\n                  \n              <h4 className=\"searchResult__h4\">{x.title}</h4>\n              </span>\n              <ul className=\"searchResult__ul\">\n                  {this.domParser(x.body).map(x => {\n                    return <li>{x}</li>\n                  })}\n              </ul>\n              </div>)\n    }) : ''      \n\n  const Favs = this.state.favs ? this.state.favs.map((x,index) => {\n    let starred = this.state.starred.filter(x => x.starItem.index === index)\n    return (<div className=\"searchResult\" key={index}><span className=\"searchResult__title\">\n          <i className={starred.length > 0 ? \"fa fa-star searchResult__icon searchResult__icon--starred\" : \"fa fa-star searchResult__icon\"} \n          aria-hidden=\"true\"\n          id={index}\n          onClick={() => {this._unfavoriteItem(x.x, x.x.index)}}\n          ></i>\n          <h4 className=\"searchResult__h4\">{x.x.title}</h4>\n          </span>\n          <ul className=\"searchResult__ul\">\n                  {this.domParser(x.x.body).map(x => {\n                    return <li>{x}</li>\n                  })}\n          </ul>\n          </div>)\n    }) : ''   \n  \n    return loading ? ( <Spinner /> ) : (\n      <div>\n        {title}\n        <div className={this.state.favs.length > 0 ? \"favouritesWrapper\" : 'noFavourites'}>\n          <h2 className=\"favourites__h2\">Favourites</h2>\n          {Favs}\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport SearchResult from './SearchResult'\nimport axios from 'axios';\n\nexport default class Search extends Component {\n  state = {\n    keyword: \"\",\n    url: 'https://secure.toronto.ca/cc_sr_v1/data/swm_waste_wizard_APR?limit=1000',\n    items: [],\n    loading: null\n  }\n\n  _handleSubmit = (event) => {\n    event.preventDefault();\n  }\n\n  __handleChange = (event) => {\n    const keyword = event.target.value;\n\n    //When the input field gets cleared, so do the search results\n    if(event.target.value === \"\"){\n      //A timeout to ease out the emptying of the search\n      setTimeout(() => {\n        this.setState({items: []});\n      }, 300);\n    }\n    //setting the state of the keyword as the user types\n    this.setState({keyword})\n  }\n\n  _handleKeyDown = (event) => {\n    const ENTER_KEY = 13\n    const KEY_PRESSED = event.keyCode\n\n    //handling enter input\n    if(KEY_PRESSED === ENTER_KEY){\n      this._performApiCall();\n    }\n  }\n\n  _performApiCall = () => {\n    //The API call is gonna be made based on regex matching keyword\n    const keyword = this.state.keyword;\n    const regex = RegExp(keyword, 'g');\n    \n    //When starting to perform the search, the loading state gets set to true so that the Spinner is rendered\n    this.setState({loading: true})\n    \n    //API CALL using axios\n    axios.get(this.state.url).then(x => {\n      let res = x.data.filter(x => regex.exec(x.title) || regex.exec(x.keywords))\n      this.setState({items: res, loading: false})\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <form className=\"search\" onSubmit={this._handleSubmit}>\n          <input type=\"input\" className=\"search__input\" onChange={this.__handleChange} onKeyDown={this._handleKeyDown}/>\n          <span onClick={this._performApiCall}>\n            <i className=\"fas fa-search fa-flip-horizontal search__icon\"></i>\n          </span>\n        </form>\n        <SearchResult itemList={this.state.items} loading={this.state.loading}/>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './components/Navbar';\nimport Search from './components/Search';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n       <NavBar />\n       <Search />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}